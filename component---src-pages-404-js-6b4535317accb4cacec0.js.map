{"version":3,"sources":["webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/GlobalStyle.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Layout","_ref","children","react_default","a","createElement","styled_components_browser_esm","theme","Theme","Fragment","GlobalStyle","propTypes","node","isRequired","SEO","description","lang","meta","keywords","title","gatsby_browser_entry","query","detailsQuery","render","data","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1025518380","defaultProps","PropTypes","string","array","arrayOf","NotFoundPage","seo","m","module","exports","require","default","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","Error","object","func","createGlobalStyle","_templateObject","reset","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-404-js-6b4535317accb4cacec0.js","sourcesContent":["import React from 'react'\nimport { node } from 'prop-types'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyle, Theme } from '../components/GlobalStyle'\n\nexport default function Layout({ children }) {\n  return (\n    <ThemeProvider theme={Theme}>\n      <>\n        <GlobalStyle />\n        {children}\n      </>\n    </ThemeProvider>\n  )\n}\n\nLayout.propTypes = {\n  children: node.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n    height: 100vh;\n  }\n\n  *, *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  body {\n    background: #111;\n    color: #aaa;\n    font-family: Helvetica Neue,Helvetica,Arial,sans-serif;\n    font-size: 1.5rem;\n    height: 100vh;\n    margin: 0;\n  }\n\n  a {\n    color: #999;\n    text-decoration: underline;\n  }\n`\n\nexport const Theme = {}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}